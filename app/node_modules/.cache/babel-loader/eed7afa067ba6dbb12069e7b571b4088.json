{"ast":null,"code":"import session from './session';\nconst CREATE_REVIEW = 'create/review';\nconst EDIT_REVIEW = 'edit/review';\n\n// ACTIONS\nconst create_review = (product_id, data) => {\n  return {\n    type: CREATE_REVIEW,\n    payload: {\n      id: product_id,\n      data: data\n    }\n  };\n};\n\n// const create_review = (product_id,data) =>{\n\n//     return {\n//         type:CREATE_REVIEW,\n//         payload:{\n//             id:product_id,\n//             data:data\n//         }\n//     }\n// }\n\n//THUNKS\nexport const getReviewThunk = () => async (dispatch, getState) => {\n  const {\n    stars,\n    description,\n    user_id,\n    product_id\n  } = review;\n  const res = await fetch('/api/review/new_review', {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(review)\n  });\n  if (res.ok) {\n    const data = await res.json();\n    dispatch(create_review(product_id, data));\n    return data;\n  }\n};\nexport const createReviewThunk = review => async (dispatch, getState) => {\n  const {\n    stars,\n    description,\n    user_id,\n    product_id\n  } = review;\n  const res = await fetch('/api/review/new_review', {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(review)\n  });\n  if (res.ok) {\n    const data = await res.json();\n    dispatch(create_review(product_id, data));\n    return data;\n  }\n};\n\n//startiig\n\n//Reducers \n\nconst initialState = {\n  allReviews: {},\n  productReviews: {}\n};\nexport const reviewsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_REVIEWS:\n      {\n        return newState;\n      }\n    case CREATE_REVIEW:\n      {\n        const {\n          product_id,\n          data\n        } = action.payload;\n        const newState = {\n          ...state\n        };\n        const targetSpot = newState.singleProduct[product_id];\n        if (targetSpot) {\n          targetSpot.reviews = [...targetSpot.reviews, data];\n        }\n        return newState;\n      }\n    default:\n      return state;\n  }\n};\nexport default reviewsReducer;","map":{"version":3,"names":["session","CREATE_REVIEW","EDIT_REVIEW","create_review","product_id","data","type","payload","id","getReviewThunk","dispatch","getState","stars","description","user_id","review","res","fetch","method","headers","body","JSON","stringify","ok","json","createReviewThunk","initialState","allReviews","productReviews","reviewsReducer","state","action","GET_REVIEWS","newState","targetSpot","singleProduct","reviews"],"sources":["/Users/zenw/Capstone/Captone-Project/react-app/src/store/review.js"],"sourcesContent":["import session from './session'\nconst CREATE_REVIEW = 'create/review'\nconst EDIT_REVIEW = 'edit/review'\n\n// ACTIONS\nconst create_review = (product_id,data) =>{\n \n    return {\n        type:CREATE_REVIEW,\n        payload:{\n            id:product_id,\n            data:data\n        }\n    }\n}\n\n// const create_review = (product_id,data) =>{\n \n//     return {\n//         type:CREATE_REVIEW,\n//         payload:{\n//             id:product_id,\n//             data:data\n//         }\n//     }\n// }\n\n\n\n\n\n\n\n//THUNKS\nexport const getReviewThunk = ()=>async(dispatch,getState) =>{\n    const {stars,description,user_id,product_id} = review\n \n    const res = await fetch('/api/review/new_review',{\n        method:\"POST\",\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(review),\n\n    })\n    if(res.ok){\n        const data = await res.json()\n       \n        dispatch(create_review(product_id,data))\n        return data\n    }\n\n\n}\n\nexport const createReviewThunk = (review)=>async(dispatch,getState) =>{\n    const {stars,description,user_id,product_id} = review\n \n    const res = await fetch('/api/review/new_review',{\n        method:\"POST\",\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(review),\n\n    })\n    if(res.ok){\n        const data = await res.json()\n       \n        dispatch(create_review(product_id,data))\n        return data\n    }\n\n\n}\n\n\n//startiig\n\n\n\n//Reducers \n\nconst initialState = {allReviews:{}, productReviews:{}}\n\n\nexport const reviewsReducer=(state=initialState ,action)=>{\n   \n    switch(action.type){\n    case GET_REVIEWS:{\n\n        return newState\n    }\n    case CREATE_REVIEW: {\n      \n        const { product_id, data } = action.payload;\n\n       \n        const newState = { ...state };\n        const targetSpot = newState.singleProduct[product_id];\n              if (targetSpot) {\n          targetSpot.reviews = [...targetSpot.reviews, data];\n        }\n        return newState;\n     }\n\n\n\n\n        default:\n            return state\n    }\n}\n\nexport default reviewsReducer\n\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,WAAW;AAC/B,MAAMC,aAAa,GAAG,eAAe;AACrC,MAAMC,WAAW,GAAG,aAAa;;AAEjC;AACA,MAAMC,aAAa,GAAG,CAACC,UAAU,EAACC,IAAI,KAAI;EAEtC,OAAO;IACHC,IAAI,EAACL,aAAa;IAClBM,OAAO,EAAC;MACJC,EAAE,EAACJ,UAAU;MACbC,IAAI,EAACA;IACT;EACJ,CAAC;AACL,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAQA;AACA,OAAO,MAAMI,cAAc,GAAG,MAAI,OAAMC,QAAQ,EAACC,QAAQ,KAAI;EACzD,MAAM;IAACC,KAAK;IAACC,WAAW;IAACC,OAAO;IAACV;EAAU,CAAC,GAAGW,MAAM;EAErD,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,wBAAwB,EAAC;IAC7CC,MAAM,EAAC,MAAM;IACbC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,MAAM;EAE/B,CAAC,CAAC;EACF,IAAGC,GAAG,CAACO,EAAE,EAAC;IACN,MAAMlB,IAAI,GAAG,MAAMW,GAAG,CAACQ,IAAI,EAAE;IAE7Bd,QAAQ,CAACP,aAAa,CAACC,UAAU,EAACC,IAAI,CAAC,CAAC;IACxC,OAAOA,IAAI;EACf;AAGJ,CAAC;AAED,OAAO,MAAMoB,iBAAiB,GAAIV,MAAM,IAAG,OAAML,QAAQ,EAACC,QAAQ,KAAI;EAClE,MAAM;IAACC,KAAK;IAACC,WAAW;IAACC,OAAO;IAACV;EAAU,CAAC,GAAGW,MAAM;EAErD,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,wBAAwB,EAAC;IAC7CC,MAAM,EAAC,MAAM;IACbC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,MAAM;EAE/B,CAAC,CAAC;EACF,IAAGC,GAAG,CAACO,EAAE,EAAC;IACN,MAAMlB,IAAI,GAAG,MAAMW,GAAG,CAACQ,IAAI,EAAE;IAE7Bd,QAAQ,CAACP,aAAa,CAACC,UAAU,EAACC,IAAI,CAAC,CAAC;IACxC,OAAOA,IAAI;EACf;AAGJ,CAAC;;AAGD;;AAIA;;AAEA,MAAMqB,YAAY,GAAG;EAACC,UAAU,EAAC,CAAC,CAAC;EAAEC,cAAc,EAAC,CAAC;AAAC,CAAC;AAGvD,OAAO,MAAMC,cAAc,GAAC,YAA8B;EAAA,IAA7BC,KAAK,uEAACJ,YAAY;EAAA,IAAEK,MAAM;EAEnD,QAAOA,MAAM,CAACzB,IAAI;IAClB,KAAK0B,WAAW;MAAC;QAEb,OAAOC,QAAQ;MACnB;IACA,KAAKhC,aAAa;MAAE;QAEhB,MAAM;UAAEG,UAAU;UAAEC;QAAK,CAAC,GAAG0B,MAAM,CAACxB,OAAO;QAG3C,MAAM0B,QAAQ,GAAG;UAAE,GAAGH;QAAM,CAAC;QAC7B,MAAMI,UAAU,GAAGD,QAAQ,CAACE,aAAa,CAAC/B,UAAU,CAAC;QAC/C,IAAI8B,UAAU,EAAE;UACpBA,UAAU,CAACE,OAAO,GAAG,CAAC,GAAGF,UAAU,CAACE,OAAO,EAAE/B,IAAI,CAAC;QACpD;QACA,OAAO4B,QAAQ;MAClB;IAKG;MACI,OAAOH,KAAK;EAAA;AAExB,CAAC;AAED,eAAeD,cAAc"},"metadata":{},"sourceType":"module"}