{"ast":null,"code":"const GET_SEARCH = \"get/search\";\nexport const get_search = data => {\n  return {\n    type: GET_SEARCH,\n    payload: data\n  };\n};\nexport const getSearchThunk = search => async (dispatch, getState) => {\n  const res = await fetch(`/api/search/${search}`, {\n    method: \"GET\"\n  });\n  if (res.ok) {\n    const data = await res.json();\n    dispatch(get_search(data));\n    return data;\n  }\n};\nconst inital_state = {\n  searchProducts: {}\n};\nconst searchReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : inital_state;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_SEARCH:\n      {\n        const newState = {\n          ...state,\n          searchProducts: {\n            ...state.searchProducts\n          }\n        };\n        //make a copy of all the keys in the data not whats in them\n\n        newState.searchProducts = action.payload.data;\n        return newState;\n      }\n    default:\n      return state;\n  }\n};\nexport default searchReducer;","map":{"version":3,"names":["GET_SEARCH","get_search","data","type","payload","getSearchThunk","search","dispatch","getState","res","fetch","method","ok","json","inital_state","searchProducts","searchReducer","state","action","newState"],"sources":["/Users/zenw/Capstone/Captone-Project/react-app/src/store/search.js"],"sourcesContent":["const GET_SEARCH = \"get/search\"\n\n\n\n\nexport const get_search = (data) =>{\n    return {\n        type:GET_SEARCH,\n        payload:data\n    }\n}\n\n\nexport const getSearchThunk = (search) => async (dispatch, getState) => {\n    \n    const res = await fetch(`/api/search/${search}`,{\n       method: \"GET\"\n   });\n   if (res.ok) {\n       const data = await res.json();\n       dispatch(get_search(data));\n     \n       return data;\n   } \n}\n\nconst inital_state = {searchProducts :{}}\nconst searchReducer = (state=inital_state, action)=>{\n   \n    switch(action.type) {\n        case GET_SEARCH:{\n          \n\n            const newState = {...state, searchProducts:{...state.searchProducts}}\n            //make a copy of all the keys in the data not whats in them\n\n          \n            newState.searchProducts = action.payload.data\n     \n            return newState\n        }\n    default:\n        return state\n    \n    \n    }\n}\n\nexport default searchReducer\n\n\n\n\n\n\n"],"mappings":"AAAA,MAAMA,UAAU,GAAG,YAAY;AAK/B,OAAO,MAAMC,UAAU,GAAIC,IAAI,IAAI;EAC/B,OAAO;IACHC,IAAI,EAACH,UAAU;IACfI,OAAO,EAACF;EACZ,CAAC;AACL,CAAC;AAGD,OAAO,MAAMG,cAAc,GAAIC,MAAM,IAAK,OAAOC,QAAQ,EAAEC,QAAQ,KAAK;EAEpE,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,eAAcJ,MAAO,EAAC,EAAC;IAC7CK,MAAM,EAAE;EACZ,CAAC,CAAC;EACF,IAAIF,GAAG,CAACG,EAAE,EAAE;IACR,MAAMV,IAAI,GAAG,MAAMO,GAAG,CAACI,IAAI,EAAE;IAC7BN,QAAQ,CAACN,UAAU,CAACC,IAAI,CAAC,CAAC;IAE1B,OAAOA,IAAI;EACf;AACH,CAAC;AAED,MAAMY,YAAY,GAAG;EAACC,cAAc,EAAE,CAAC;AAAC,CAAC;AACzC,MAAMC,aAAa,GAAG,YAA8B;EAAA,IAA7BC,KAAK,uEAACH,YAAY;EAAA,IAAEI,MAAM;EAE7C,QAAOA,MAAM,CAACf,IAAI;IACd,KAAKH,UAAU;MAAC;QAGZ,MAAMmB,QAAQ,GAAG;UAAC,GAAGF,KAAK;UAAEF,cAAc,EAAC;YAAC,GAAGE,KAAK,CAACF;UAAc;QAAC,CAAC;QACrE;;QAGAI,QAAQ,CAACJ,cAAc,GAAGG,MAAM,CAACd,OAAO,CAACF,IAAI;QAE7C,OAAOiB,QAAQ;MACnB;IACJ;MACI,OAAOF,KAAK;EAAA;AAIpB,CAAC;AAED,eAAeD,aAAa"},"metadata":{},"sourceType":"module"}