{"ast":null,"code":"//ACTION TYPES\nconst GET_PRODUCTS = 'get/products';\nconst DELETE_PRODUCT = 'delete/product';\nconst CREATE_PRODUCT = 'create/product';\n\n//ACTIONS\nexport const get_products = data => {\n  return {\n    type: GET_PRODUCTS,\n    payload: data\n  };\n};\nexport const delete_product = data => {\n  return {\n    type: DELETE_PRODUCT,\n    payload: data\n  };\n};\nexport const create_product = data => {\n  return {\n    type: CREATE_PRODUCT,\n    payload: data\n  };\n};\n\n// THUNKS\nexport const createProductThunk = product => async (dispatch, getState) => {\n  const {\n    product_id\n  } = product;\n  const res = await fetch(\"api/products/new_product\", {\n    method: \"POST\",\n    body: product\n  });\n  if (res.ok) {\n    const data = await res.json();\n    dispatch(create_product(data));\n    return data;\n  }\n};\nexport const deleteProductThunk = product_id => async (dispatch, getState) => {\n  const res = await fetch(`api/products/delete/${product_id}`, {\n    method: \"DELETE\"\n  });\n  if (res.ok) {\n    const data = await res.json();\n    dispatch(delete_product(data));\n    return data;\n  }\n};\nexport const getAllProductThunk = () => async (dispatch, getState) => {\n  const res = await fetch('/api/products/', {\n    method: \"GET\"\n  });\n  if (res.ok) {\n    const data = await res.json();\n    dispatch(get_products(data));\n    return data;\n  } else {\n    const errorData = await res.json();\n    throw new Error(errorData.error || 'Failed to fetch data');\n  }\n};\n\n//REDUCDER\nconst inital_state = {\n  allProducts: {}\n};\nconst productReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : inital_state;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_PRODUCTS:\n      {\n        const newState = {\n          ...state,\n          allProducts: {\n            ...state.allProducts\n          }\n        };\n        //make a copy of all the keys in the data not whats in them\n\n        action.payload.forEach(element => {\n          newState.allProducts[element.id] = element;\n        });\n        return newState;\n      }\n    case DELETE_PRODUCT:\n      {\n        const newState = {\n          ...state,\n          allProducts: {\n            ...state.allProducts\n          }\n        };\n        newState.allProducts = action.payload;\n        return newState;\n      }\n    case CREATE_PRODUCT:\n      {\n        const newState = {\n          ...state,\n          allProducts: {\n            ...state.allProducts\n          }\n        };\n        newState.allProducts[action.payload.id] = action.payload.data;\n        return newState;\n      }\n    default:\n      return state;\n  }\n};\nexport default productReducer;","map":{"version":3,"names":["GET_PRODUCTS","DELETE_PRODUCT","CREATE_PRODUCT","get_products","data","type","payload","delete_product","create_product","createProductThunk","product","dispatch","getState","product_id","res","fetch","method","body","ok","json","deleteProductThunk","getAllProductThunk","errorData","Error","error","inital_state","allProducts","productReducer","state","action","newState","forEach","element","id"],"sources":["/Users/zenw/Capstone/Captone-Project/react-app/src/store/products.js"],"sourcesContent":["\n//ACTION TYPES\nconst GET_PRODUCTS = 'get/products'\nconst DELETE_PRODUCT='delete/product'\nconst CREATE_PRODUCT='create/product'\n\n\n//ACTIONS\nexport const get_products = (data) =>{\n    return {\n        type:GET_PRODUCTS,\n        payload:data\n    }\n}\n\nexport const delete_product = (data)=>{\n    return {\n        type:DELETE_PRODUCT,\n        payload:data\n    }\n}\n\nexport const create_product = (data)=>{\n    return {\n        type:CREATE_PRODUCT,\n        payload:data\n    }\n}\n\n\n\n\n\n\n\n\n\n// THUNKS\nexport const createProductThunk = (product) => async(dispatch,getState) =>{\n    const {product_id, } = product \n    const res = await fetch(\"api/products/new_product\",{\n        method:\"POST\",\n        body:product\n    })\n    if(res.ok){\n        const data = await res.json()\n        dispatch(create_product(data))\n        return data\n    }\n}\n\n\nexport const deleteProductThunk = (product_id) => async(dispatch,getState) =>{\n    const res = await fetch(`api/products/delete/${product_id}`,{\n        method:\"DELETE\"\n    })\n    if(res.ok){\n        const data = await res.json()\n        dispatch(delete_product(data))\n        return data\n    }\n}\n\n\nexport const getAllProductThunk = () => async (dispatch, getState) => {\n         const res = await fetch('/api/products/',{\n            method: \"GET\"\n        });\n        if (res.ok) {\n            const data = await res.json();\n            dispatch(get_products(data));\n            return data;\n        } else {\n          \n            const errorData = await res.json();\n            throw new Error(errorData.error || 'Failed to fetch data');\n        }  \n}\n\n\n//REDUCDER\nconst inital_state = {allProducts:{}}\n\nconst productReducer = (state=inital_state, action)=>{\n   \n    switch(action.type) {\n        case GET_PRODUCTS:{\n        \n            const newState = {...state, allProducts:{...state.allProducts}}\n            //make a copy of all the keys in the data not whats in them\n\n            action.payload.forEach((element)=>{\n                newState.allProducts[element.id]=element\n            })\n            return newState\n        }\n        case DELETE_PRODUCT:{\n            const newState = {...state,allProducts:{...state.allProducts}}\n            newState.allProducts = action.payload\n            return newState\n        }\n        case CREATE_PRODUCT:{\n            const newState = {...state , allProducts:{...state.allProducts}}\n            newState.allProducts[action.payload.id] = action.payload.data\n            return newState\n        }\n        default:\n            return state\n\n    }\n}\n\n\nexport default productReducer"],"mappings":"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"},"metadata":{},"sourceType":"module"}