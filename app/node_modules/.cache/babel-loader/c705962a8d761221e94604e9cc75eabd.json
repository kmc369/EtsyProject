{"ast":null,"code":"//ACTION TYPES\nconst GET_PRODUCTS = 'get/products';\nconst DELETE_PRODUCT = 'delete/product';\nconst CREATE_PRODUCT = 'create/product';\nconst EDIT_PRODUCT = \"edit/product\";\nconst GET_PRODUCT_BY_ID = \"get/product/by/id\";\n\n//ACTIONS\nexport const get_products = data => {\n  return {\n    type: GET_PRODUCTS,\n    payload: data\n  };\n};\nexport const get_products_by_id = data => {\n  return {\n    type: GET_PRODUCT_BY_ID,\n    payload: data\n  };\n};\nexport const delete_product = data => {\n  return {\n    type: DELETE_PRODUCT,\n    payload: data\n  };\n};\nexport const create_product = data => {\n  return {\n    type: CREATE_PRODUCT,\n    payload: data\n  };\n};\nexport const edit_product = data => {\n  return {\n    type: CREATE_PRODUCT,\n    payload: data\n  };\n};\n\n// THUNKS\nexport const createProductThunk = product => async (dispatch, getState) => {\n  const res = await fetch(\"/api/products/new_product\", {\n    method: \"POST\",\n    body: product\n  });\n  if (res.ok) {\n    const data = await res.json();\n    dispatch(create_product(data));\n    return data;\n  }\n};\nexport const getProductByIdThunk = product_id => async (dispatch, getState) => {\n  const res = await fetch(`/api/products/single_product/${product_id}`, {\n    method: \"GET\"\n  });\n  if (res.ok) {\n    const data = await res.json();\n    dispatch(getProductByIdThunk(data));\n    return data;\n  } else {\n    const errorData = await res.json();\n    throw new Error(errorData.error || 'Failed to fetch data');\n  }\n};\nexport const deleteProductThunk = product_id => async (dispatch, getState) => {\n  const res = await fetch(`/api/products/delete/${product_id}`, {\n    method: \"DELETE\"\n  });\n  if (res.ok) {\n    const data = await res.json();\n    dispatch(delete_product(data));\n    return data;\n  }\n};\nexport const getAllProductThunk = () => async (dispatch, getState) => {\n  const res = await fetch('/api/products/', {\n    method: \"GET\"\n  });\n  if (res.ok) {\n    const data = await res.json();\n    dispatch(get_products(data));\n    return data;\n  } else {\n    const errorData = await res.json();\n    throw new Error(errorData.error || 'Failed to fetch data');\n  }\n};\nexport const editProductThunk = product => async (dispatch, getState) => {\n  const res = await fetch(`/api/products/update/${product.id}`, {\n    method: \"PUT\",\n    body: product\n  });\n  if (res.ok) {\n    const data = await res.json();\n    dispatch(get_products(data));\n    return data;\n  } else {\n    const errorData = await res.json();\n    throw new Error(errorData.error || 'Failed to fetch data');\n  }\n};\n\n//REDUCDER\nconst inital_state = {\n  allProducts: {},\n  singleProduct: {}\n};\nconst productReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : inital_state;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_PRODUCTS:\n      {\n        console.log(\"the action payload is \", action.payload);\n        const newState = {\n          ...state,\n          allProducts: {\n            ...state.allProducts\n          }\n        };\n        //make a copy of all the keys in the data not whats in them\n\n        action.payload.forEach(element => {\n          newState.allProducts[element.id] = element;\n        });\n        return newState;\n      }\n    case DELETE_PRODUCT:\n      {\n        const newState = {\n          ...state,\n          allProducts: {\n            ...state.allProducts\n          }\n        };\n        newState.allProducts = action.payload;\n        return newState;\n      }\n    case CREATE_PRODUCT:\n      {\n        const newState = {\n          ...state,\n          allProducts: {\n            ...state.allProducts\n          }\n        };\n        newState.allProducts[action.payload.id] = action.payload;\n        return newState;\n      }\n    case EDIT_PRODUCT:\n      {\n        const newState = {\n          ...state,\n          allProducts: {\n            ...state.allProducts\n          }\n        };\n        newState.allProducts[action.payload.id] = action.payload;\n        return newState;\n      }\n    case GET_PRODUCT_BY_ID:\n      {\n        const newState = {\n          ...state,\n          singleProduct: {\n            ...state.singleProduct\n          }\n        };\n        newState.singleProduct = action.payload;\n        return newState;\n      }\n    default:\n      return state;\n  }\n};\nexport default productReducer;","map":{"version":3,"names":["GET_PRODUCTS","DELETE_PRODUCT","CREATE_PRODUCT","EDIT_PRODUCT","GET_PRODUCT_BY_ID","get_products","data","type","payload","get_products_by_id","delete_product","create_product","edit_product","createProductThunk","product","dispatch","getState","res","fetch","method","body","ok","json","getProductByIdThunk","product_id","errorData","Error","error","deleteProductThunk","getAllProductThunk","editProductThunk","id","inital_state","allProducts","singleProduct","productReducer","state","action","console","log","newState","forEach","element"],"sources":["/Users/zenw/Capstone/Captone-Project/react-app/src/store/products.js"],"sourcesContent":["\n//ACTION TYPES\nconst GET_PRODUCTS = 'get/products'\nconst DELETE_PRODUCT='delete/product'\nconst CREATE_PRODUCT='create/product'\nconst EDIT_PRODUCT = \"edit/product\"\nconst GET_PRODUCT_BY_ID = \"get/product/by/id\"\n\n//ACTIONS\nexport const get_products = (data) =>{\n    return {\n        type:GET_PRODUCTS,\n        payload:data\n    }\n}\n\nexport const get_products_by_id = (data) =>{\n    return {\n        type:GET_PRODUCT_BY_ID,\n        payload:data\n    }\n}\n\nexport const delete_product = (data)=>{\n    return {\n        type:DELETE_PRODUCT,\n        payload:data\n    }\n}\n\nexport const create_product = (data)=>{\n    return {\n        type:CREATE_PRODUCT,\n        payload:data\n    }\n}\n\nexport const edit_product = (data)=>{\n    return {\n        type:CREATE_PRODUCT,\n        payload:data\n    }\n}\n\n\n\n\n\n\n\n\n\n// THUNKS\nexport const createProductThunk = (product) => async(dispatch,getState) =>{\n \n \n    const res = await fetch(\"/api/products/new_product\",{\n        method:\"POST\",\n        body:product\n    })\n    if(res.ok){\n        const data = await res.json()\n        dispatch(create_product(data))\n        return data\n    }\n}\n\n\nexport const getProductByIdThunk = (product_id) => async (dispatch, getState) => {\n    const res = await fetch(`/api/products/single_product/${product_id}`,{\n       method: \"GET\"\n   });\n   if (res.ok) {\n       const data = await res.json();\n       dispatch(getProductByIdThunk(data));\n       return data;\n   } else {\n     \n       const errorData = await res.json();\n       throw new Error(errorData.error || 'Failed to fetch data');\n   }  \n}\n\n\nexport const deleteProductThunk = (product_id) => async(dispatch,getState) =>{\n    const res = await fetch(`/api/products/delete/${product_id}`,{\n        method:\"DELETE\"\n    })\n    if(res.ok){\n        const data = await res.json()\n        dispatch(delete_product(data))\n        return data\n    }\n}\n\n\nexport const getAllProductThunk = () => async (dispatch, getState) => {\n         const res = await fetch('/api/products/',{\n            method: \"GET\"\n        });\n        if (res.ok) {\n            const data = await res.json();\n            dispatch(get_products(data));\n            return data;\n        } else {\n          \n            const errorData = await res.json();\n            throw new Error(errorData.error || 'Failed to fetch data');\n        }  \n}\n\nexport const editProductThunk = (product) => async (dispatch, getState) => {\n    const res = await fetch(`/api/products/update/${product.id}`,{\n        method:\"PUT\",\n        body:product\n    })\n\n   if (res.ok) {\n       const data = await res.json();\n       dispatch(get_products(data));\n       return data;\n   } else {\n     \n       const errorData = await res.json();\n       throw new Error(errorData.error || 'Failed to fetch data');\n   }  \n}\n\n\n//REDUCDER\nconst inital_state = {allProducts:{}, singleProduct:{}}\n\nconst productReducer = (state=inital_state, action)=>{\n   \n    switch(action.type) {\n        case GET_PRODUCTS:{\n            console.log(\"the action payload is \",action.payload)\n          \n\n            const newState = {...state, allProducts:{...state.allProducts}}\n            //make a copy of all the keys in the data not whats in them\n\n            action.payload.forEach((element)=>{\n                newState.allProducts[element.id]=element\n            })\n            return newState\n        }\n        case DELETE_PRODUCT:{\n            const newState = {...state,allProducts:{...state.allProducts}}\n            newState.allProducts = action.payload\n            return newState\n        }\n        case CREATE_PRODUCT:{\n            const newState = {...state , allProducts:{...state.allProducts}}\n            newState.allProducts[action.payload.id] = action.payload\n            \n            return newState\n        }\n        case EDIT_PRODUCT:{\n           \n            const newState = {...state,allProducts:{...state.allProducts}}\n            newState.allProducts[action.payload.id] = action.payload\n            return newState\n        }\n        case GET_PRODUCT_BY_ID:{\n            const newState  = {...state, singleProduct:{...state.singleProduct}}\n            newState.singleProduct = action.payload\n            return newState\n        }\n        default:\n            return state\n\n    }\n}\n\n\nexport default productReducer"],"mappings":"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"},"metadata":{},"sourceType":"module"}