{"ast":null,"code":"// constants\nconst SET_USER = \"session/SET_USER\";\nconst REMOVE_USER = \"session/REMOVE_USER\";\nconst GET_PRODUCT_OF_USER = \"user/products\";\nconst setUser = user => ({\n  type: SET_USER,\n  payload: user\n});\nconst removeUser = () => ({\n  type: REMOVE_USER\n});\nexport const get_user_products = data => {\n  return {\n    type: GET_PRODUCT_OF_USER,\n    payload: data\n  };\n};\nexport const authenticate = () => async dispatch => {\n  const response = await fetch(\"/api/auth/\", {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  if (response.ok) {\n    const data = await response.json();\n    if (data.errors) {\n      return;\n    }\n    dispatch(setUser(data));\n  }\n};\nexport const login = (email, password) => async dispatch => {\n  const response = await fetch(\"/api/auth/login\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n  if (response.ok) {\n    const data = await response.json();\n    dispatch(setUser(data));\n    return null;\n  } else if (response.status < 500) {\n    const data = await response.json();\n    if (data.errors) {\n      return data.errors;\n    }\n  } else {\n    return [\"An error occurred. Please try again.\"];\n  }\n};\nexport const logout = () => async dispatch => {\n  const response = await fetch(\"/api/auth/logout\", {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  if (response.ok) {\n    dispatch(removeUser());\n  }\n};\nexport const signUp = (username, email, password) => async dispatch => {\n  const response = await fetch(\"/api/auth/signup\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      username,\n      email,\n      password\n    })\n  });\n  if (response.ok) {\n    const data = await response.json();\n    dispatch(setUser(data));\n    return null;\n  } else if (response.status < 500) {\n    const data = await response.json();\n    if (data.errors) {\n      return data.errors;\n    }\n  } else {\n    return [\"An error occurred. Please try again.\"];\n  }\n};\nexport const getUserProductThunk = user_id => async (dispatch, getState) => {\n  const res = await fetch(`/api/products/user/${user_id}`, {\n    method: \"GET\"\n  });\n  if (res.ok) {\n    const data = await res.json();\n    console.log(\"the data coming back is\", data);\n    dispatch(get_user_products(data));\n    return data;\n  }\n};\nconst initialState = {\n  user: null\n};\nexport default function reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case SET_USER:\n      return {\n        user: action.payload\n      };\n    case REMOVE_USER:\n      return {\n        user: null\n      };\n    case GET_PRODUCT_OF_USER:\n      {\n        const newState = {\n          ...state\n        };\n        newState.user.products = action.payload;\n        return newState;\n      }\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["SET_USER","REMOVE_USER","GET_PRODUCT_OF_USER","setUser","user","type","payload","removeUser","get_user_products","data","authenticate","dispatch","response","fetch","headers","ok","json","errors","login","email","password","method","body","JSON","stringify","status","logout","signUp","username","getUserProductThunk","user_id","getState","res","console","log","initialState","reducer","state","action","newState","products"],"sources":["/Users/zenw/Capstone/Captone-Project/react-app/src/store/session.js"],"sourcesContent":["// constants\nconst SET_USER = \"session/SET_USER\";\nconst REMOVE_USER = \"session/REMOVE_USER\";\nconst GET_PRODUCT_OF_USER = \"user/products\"\n\n\nconst setUser = (user) => ({\n\ttype: SET_USER,\n\tpayload: user,\n});\n\nconst removeUser = () => ({\n\ttype: REMOVE_USER,\n});\n\nexport const get_user_products = (data) =>{\n    return {\n        type:GET_PRODUCT_OF_USER,\n        payload:data\n\n        \n    }\n}\n\n\n\nexport const authenticate = () => async (dispatch) => {\n\tconst response = await fetch(\"/api/auth/\", {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t});\n\tif (response.ok) {\n\t\tconst data = await response.json();\n\t\tif (data.errors) {\n\t\t\treturn;\n\t\t}\n\n\t\tdispatch(setUser(data));\n\t}\n};\n\nexport const login = (email, password) => async (dispatch) => {\n\tconst response = await fetch(\"/api/auth/login\", {\n\t\tmethod: \"POST\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\temail,\n\t\t\tpassword,\n\t\t}),\n\t});\n\n\tif (response.ok) {\n\t\tconst data = await response.json();\n\t\tdispatch(setUser(data));\n\t\treturn null;\n\t} else if (response.status < 500) {\n\t\tconst data = await response.json();\n\t\tif (data.errors) {\n\t\t\treturn data.errors;\n\t\t}\n\t} else {\n\t\treturn [\"An error occurred. Please try again.\"];\n\t}\n};\n\nexport const logout = () => async (dispatch) => {\n\tconst response = await fetch(\"/api/auth/logout\", {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t});\n\n\tif (response.ok) {\n\t\tdispatch(removeUser());\n\t}\n};\n\nexport const signUp = (username, email, password) => async (dispatch) => {\n\tconst response = await fetch(\"/api/auth/signup\", {\n\t\tmethod: \"POST\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\tusername,\n\t\t\temail,\n\t\t\tpassword,\n\t\t}),\n\t});\n\n\tif (response.ok) {\n\t\tconst data = await response.json();\n\t\tdispatch(setUser(data));\n\t\treturn null;\n\t} else if (response.status < 500) {\n\t\tconst data = await response.json();\n\t\tif (data.errors) {\n\t\t\treturn data.errors;\n\t\t}\n\t} else {\n\t\treturn [\"An error occurred. Please try again.\"];\n\t}\n};\n\n\nexport const getUserProductThunk = (user_id) => async(dispatch,getState) =>{\n \n \n    const res = await fetch(`/api/products/user/${user_id}`,{\n        method:\"GET\",\n     \n    })\n    if(res.ok){\n        const data = await res.json()\n\t\tconsole.log(\"the data coming back is\",data)\n        dispatch(get_user_products(data))\n        return data\n    }\n}\n\nconst initialState = { user: null };\nexport default function reducer(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase SET_USER:\n\t\t\treturn { user: action.payload };\n\t\tcase REMOVE_USER:\n\t\t\treturn { user: null };\n\t\tcase GET_PRODUCT_OF_USER:{\n          \tconst newState = {...state}\n\t\t\tnewState.user.products = action.payload\n\t\t\treturn newState\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}