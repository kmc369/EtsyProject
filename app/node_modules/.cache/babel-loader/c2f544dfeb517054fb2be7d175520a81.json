{"ast":null,"code":"const CREATE_REVIEW = 'create/review';\n\n// ACTIONS\nconst create_review = (product_id, data) => {\n  return {\n    type: CREATE_REVIEW,\n    payload: {\n      id: product_id,\n      data: data\n    }\n  };\n};\n\n//THUNKS\n\nexport const createReviewThunk = review => async (dispatch, getState) => {\n  const {\n    stars,\n    description,\n    user_id,\n    product_id\n  } = review;\n  console.log(\"review form the thunk is\", review);\n  const res = await fetch('/api/review/new_review', {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(review)\n  });\n  if (res.ok) {\n    const data = await res.json();\n    console.log(\"the data returned is\", data);\n    dispatch(create_review(product_id, data));\n    return data;\n  }\n};\n\n//startiig\n\n//Reducers \n\nconst initialState = {\n  singleProduct: {},\n  user: {}\n};\nexport const reviewsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(\"in reducer\");\n  switch (action.type) {\n    case CREATE_REVIEW:\n      {\n        const newState = {\n          ...state,\n          singleProduct: {},\n          user: {\n            ...state.user\n          },\n          allProduct: {\n            ...state.allProduct\n          }\n        };\n        console.log(\"the id is\", action.payload.id, \"the data is \", action.payload.data);\n        newState.singleProduct[action.payload.id].reviews = action.payload.data;\n        // // newState.allProduct.append[action.payload]\n        // if(target){\n        //     target.review = action.payload \n        // }\n        newState.user.reviews = action.payload.data;\n        return newState;\n      }\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["CREATE_REVIEW","create_review","product_id","data","type","payload","id","createReviewThunk","review","dispatch","getState","stars","description","user_id","console","log","res","fetch","method","headers","body","JSON","stringify","ok","json","initialState","singleProduct","user","reviewsReducer","state","action","newState","allProduct","reviews"],"sources":["/Users/zenw/Capstone/Captone-Project/react-app/src/store/review.js"],"sourcesContent":["const CREATE_REVIEW = 'create/review'\n\n\n// ACTIONS\nconst create_review = (product_id,data) =>{\n\n    return {\n        type:CREATE_REVIEW,\n        payload:{\n            id:product_id,\n            data:data\n        }\n    }\n}\n\n\n\n\n\n\n//THUNKS\n\nexport const createReviewThunk = (review)=>async(dispatch,getState) =>{\n    const {stars,description,user_id,product_id} = review\n    console.log(\"review form the thunk is\", review)\n    const res = await fetch('/api/review/new_review',{\n        method:\"POST\",\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(review),\n\n    })\n    if(res.ok){\n        const data = await res.json()\n        console.log(\"the data returned is\",data)\n        dispatch(create_review(product_id,data))\n        return data\n    }\n\n\n}\n\n\n//startiig\n\n\n\n//Reducers \n\nconst initialState = {singleProduct:{},user:{}}\n\n\nexport const reviewsReducer=(state=initialState ,action)=>{\n    console.log(\"in reducer\")\n    switch(action.type){\n      \n \n      case CREATE_REVIEW: {\n      \n        const newState = { ...state, singleProduct:{}, user:{...state.user}, allProduct:{...state.allProduct} };\n        console.log(\"the id is\", action.payload.id , \"the data is \", action.payload.data)\n        newState.singleProduct[action.payload.id].reviews = action.payload.data\n        // // newState.allProduct.append[action.payload]\n        // if(target){\n        //     target.review = action.payload \n        // }\n        newState.user.reviews = action.payload.data\n        \n      \n        return newState;\n      }\n\n\n        default:\n            return state\n    }\n}\n\n"],"mappings":"AAAA,MAAMA,aAAa,GAAG,eAAe;;AAGrC;AACA,MAAMC,aAAa,GAAG,CAACC,UAAU,EAACC,IAAI,KAAI;EAEtC,OAAO;IACHC,IAAI,EAACJ,aAAa;IAClBK,OAAO,EAAC;MACJC,EAAE,EAACJ,UAAU;MACbC,IAAI,EAACA;IACT;EACJ,CAAC;AACL,CAAC;;AAOD;;AAEA,OAAO,MAAMI,iBAAiB,GAAIC,MAAM,IAAG,OAAMC,QAAQ,EAACC,QAAQ,KAAI;EAClE,MAAM;IAACC,KAAK;IAACC,WAAW;IAACC,OAAO;IAACX;EAAU,CAAC,GAAGM,MAAM;EACrDM,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEP,MAAM,CAAC;EAC/C,MAAMQ,GAAG,GAAG,MAAMC,KAAK,CAAC,wBAAwB,EAAC;IAC7CC,MAAM,EAAC,MAAM;IACbC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACd,MAAM;EAE/B,CAAC,CAAC;EACF,IAAGQ,GAAG,CAACO,EAAE,EAAC;IACN,MAAMpB,IAAI,GAAG,MAAMa,GAAG,CAACQ,IAAI,EAAE;IAC7BV,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAACZ,IAAI,CAAC;IACxCM,QAAQ,CAACR,aAAa,CAACC,UAAU,EAACC,IAAI,CAAC,CAAC;IACxC,OAAOA,IAAI;EACf;AAGJ,CAAC;;AAGD;;AAIA;;AAEA,MAAMsB,YAAY,GAAG;EAACC,aAAa,EAAC,CAAC,CAAC;EAACC,IAAI,EAAC,CAAC;AAAC,CAAC;AAG/C,OAAO,MAAMC,cAAc,GAAC,YAA8B;EAAA,IAA7BC,KAAK,uEAACJ,YAAY;EAAA,IAAEK,MAAM;EACnDhB,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;EACzB,QAAOe,MAAM,CAAC1B,IAAI;IAGhB,KAAKJ,aAAa;MAAE;QAElB,MAAM+B,QAAQ,GAAG;UAAE,GAAGF,KAAK;UAAEH,aAAa,EAAC,CAAC,CAAC;UAAEC,IAAI,EAAC;YAAC,GAAGE,KAAK,CAACF;UAAI,CAAC;UAAEK,UAAU,EAAC;YAAC,GAAGH,KAAK,CAACG;UAAU;QAAE,CAAC;QACvGlB,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEe,MAAM,CAACzB,OAAO,CAACC,EAAE,EAAG,cAAc,EAAEwB,MAAM,CAACzB,OAAO,CAACF,IAAI,CAAC;QACjF4B,QAAQ,CAACL,aAAa,CAACI,MAAM,CAACzB,OAAO,CAACC,EAAE,CAAC,CAAC2B,OAAO,GAAGH,MAAM,CAACzB,OAAO,CAACF,IAAI;QACvE;QACA;QACA;QACA;QACA4B,QAAQ,CAACJ,IAAI,CAACM,OAAO,GAAGH,MAAM,CAACzB,OAAO,CAACF,IAAI;QAG3C,OAAO4B,QAAQ;MACjB;IAGE;MACI,OAAOF,KAAK;EAAA;AAExB,CAAC"},"metadata":{},"sourceType":"module"}