{"ast":null,"code":"//ACTION TYPES\nconst GET_PRODUCTS = 'get/products';\nconst DELETE_PRODUCT = 'delete/product';\n\n//ACTIONS\nexport const get_products = data => {\n  return {\n    type: GET_PRODUCTS,\n    payload: data\n  };\n};\nexport const delete_product = data => {\n  return {\n    type: DELETE_PRODUCT,\n    payload: data\n  };\n};\n\n// THUNKS\nexport const deleteProductThunk = product_id => async (dispatch, getState) => {\n  const res = await fetch(`api/products/delete/${product_id}`, {\n    method: \"DELETE\"\n  });\n  if (res.ok) {\n    const data = await res.json();\n    dispatch(delete_product(data));\n    return data;\n  }\n};\nexport const getAllProductThunk = () => async (dispatch, getState) => {\n  const res = await fetch('/api/products/', {\n    method: \"GET\"\n  });\n  if (res.ok) {\n    const data = await res.json();\n    dispatch(get_products(data));\n    return data;\n  } else {\n    const errorData = await res.json();\n    throw new Error(errorData.error || 'Failed to fetch data');\n  }\n};\n\n//REDUCDER\nconst inital_state = {\n  allProducts: {}\n};\nconst productReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : inital_state;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_PRODUCTS:\n      const newState = {\n        ...state,\n        allProducts: {\n          ...state.allProducts\n        }\n      };\n      //make a copy of all the keys in the data not whats in them\n      newState.allProducts = action.payload;\n      return newState;\n    default:\n      return state;\n  }\n};\nexport default productReducer;","map":{"version":3,"names":["GET_PRODUCTS","DELETE_PRODUCT","get_products","data","type","payload","delete_product","deleteProductThunk","product_id","dispatch","getState","res","fetch","method","ok","json","getAllProductThunk","errorData","Error","error","inital_state","allProducts","productReducer","state","action","newState"],"sources":["/Users/zenw/Capstone/Captone-Project/react-app/src/store/products.js"],"sourcesContent":["\n//ACTION TYPES\nconst GET_PRODUCTS = 'get/products'\nconst DELETE_PRODUCT='delete/product'\n\n\n\n//ACTIONS\nexport const get_products = (data) =>{\n    return {\n        type:GET_PRODUCTS,\n        payload:data\n    }\n}\n\nexport const delete_product = (data)=>{\n    return {\n        type:DELETE_PRODUCT,\n        payload:data\n    }\n}\n\n\n\n\n\n\n\n\n\n// THUNKS\nexport const deleteProductThunk = (product_id) => async(dispatch,getState) =>{\n    const res = await fetch(`api/products/delete/${product_id}`,{\n        method:\"DELETE\"\n    })\n    if(res.ok){\n        const data = await res.json()\n        dispatch(delete_product(data))\n        return data\n    }\n}\nexport const getAllProductThunk = () => async (dispatch, getState) => {\n         const res = await fetch('/api/products/',{\n            method: \"GET\"\n        });\n        if (res.ok) {\n            const data = await res.json();\n            dispatch(get_products(data));\n            return data;\n        } else {\n          \n            const errorData = await res.json();\n            throw new Error(errorData.error || 'Failed to fetch data');\n        }  \n}\n\n\n//REDUCDER\nconst inital_state = {allProducts:{}}\n\nconst productReducer = (state=inital_state, action)=>{\n   \n    switch(action.type) {\n        case GET_PRODUCTS:\n        \n            const newState = {...state, allProducts:{...state.allProducts}}\n            //make a copy of all the keys in the data not whats in them\n            newState.allProducts = action.payload\n            return newState\n        default:\n            return state\n\n    }\n}\n\n\nexport default productReducer"],"mappings":"AACA;AACA,MAAMA,YAAY,GAAG,cAAc;AACnC,MAAMC,cAAc,GAAC,gBAAgB;;AAIrC;AACA,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAI;EACjC,OAAO;IACHC,IAAI,EAACJ,YAAY;IACjBK,OAAO,EAACF;EACZ,CAAC;AACL,CAAC;AAED,OAAO,MAAMG,cAAc,GAAIH,IAAI,IAAG;EAClC,OAAO;IACHC,IAAI,EAACH,cAAc;IACnBI,OAAO,EAACF;EACZ,CAAC;AACL,CAAC;;AAUD;AACA,OAAO,MAAMI,kBAAkB,GAAIC,UAAU,IAAK,OAAMC,QAAQ,EAACC,QAAQ,KAAI;EACzE,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,uBAAsBJ,UAAW,EAAC,EAAC;IACxDK,MAAM,EAAC;EACX,CAAC,CAAC;EACF,IAAGF,GAAG,CAACG,EAAE,EAAC;IACN,MAAMX,IAAI,GAAG,MAAMQ,GAAG,CAACI,IAAI,EAAE;IAC7BN,QAAQ,CAACH,cAAc,CAACH,IAAI,CAAC,CAAC;IAC9B,OAAOA,IAAI;EACf;AACJ,CAAC;AACD,OAAO,MAAMa,kBAAkB,GAAG,MAAM,OAAOP,QAAQ,EAAEC,QAAQ,KAAK;EAC7D,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,gBAAgB,EAAC;IACtCC,MAAM,EAAE;EACZ,CAAC,CAAC;EACF,IAAIF,GAAG,CAACG,EAAE,EAAE;IACR,MAAMX,IAAI,GAAG,MAAMQ,GAAG,CAACI,IAAI,EAAE;IAC7BN,QAAQ,CAACP,YAAY,CAACC,IAAI,CAAC,CAAC;IAC5B,OAAOA,IAAI;EACf,CAAC,MAAM;IAEH,MAAMc,SAAS,GAAG,MAAMN,GAAG,CAACI,IAAI,EAAE;IAClC,MAAM,IAAIG,KAAK,CAACD,SAAS,CAACE,KAAK,IAAI,sBAAsB,CAAC;EAC9D;AACR,CAAC;;AAGD;AACA,MAAMC,YAAY,GAAG;EAACC,WAAW,EAAC,CAAC;AAAC,CAAC;AAErC,MAAMC,cAAc,GAAG,YAA8B;EAAA,IAA7BC,KAAK,uEAACH,YAAY;EAAA,IAAEI,MAAM;EAE9C,QAAOA,MAAM,CAACpB,IAAI;IACd,KAAKJ,YAAY;MAEb,MAAMyB,QAAQ,GAAG;QAAC,GAAGF,KAAK;QAAEF,WAAW,EAAC;UAAC,GAAGE,KAAK,CAACF;QAAW;MAAC,CAAC;MAC/D;MACAI,QAAQ,CAACJ,WAAW,GAAGG,MAAM,CAACnB,OAAO;MACrC,OAAOoB,QAAQ;IACnB;MACI,OAAOF,KAAK;EAAA;AAGxB,CAAC;AAGD,eAAeD,cAAc"},"metadata":{},"sourceType":"module"}