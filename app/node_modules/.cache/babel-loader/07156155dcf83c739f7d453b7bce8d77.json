{"ast":null,"code":"import session from './session';\nconst CREATE_REVIEW = 'create/review';\nconst EDIT_REVIEW = 'edit/review';\nconst GET_REVIEWS = 'get/reviews';\n// ACTIONS\nconst create_review = (product_id, data) => {\n  return {\n    type: CREATE_REVIEW,\n    payload: {\n      product_id,\n      data\n    }\n  };\n};\nconst get_reviews = data => {\n  return {\n    type: GET_REVIEWS,\n    payload: data\n  };\n};\n\n//THUNKS\nexport const getAllReviewsThunk = () => async (dispatch, getState) => {\n  const res = await fetch('/api/review/get/reviews', {\n    method: \"GET\"\n  });\n  if (res.ok) {\n    const data = await res.json();\n    console.log(\"the data coming back is\", data);\n    dispatch(get_reviews(data));\n    return data;\n  }\n};\nexport const createReviewThunk = (product_id, review) => async (dispatch, getState) => {\n  const res = await fetch('/api/review/new_review', {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(review)\n  });\n  if (res.ok) {\n    const data = await res.json();\n    dispatch(create_review(product_id, data));\n    return data;\n  }\n};\n\n//startiig\n\n//Reducers \n\nconst initialState = {\n  allReviews: {},\n  productReviews: {}\n};\nexport const reviewsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_REVIEWS:\n      {\n        const newState = {\n          ...state,\n          allReviews: {\n            ...state.allReviews\n          }\n        };\n        action.payload.forEach(element => {\n          newState.allReviews[element.id] = element;\n        });\n        return newState;\n      }\n    case CREATE_REVIEW:\n      {\n        const {\n          product_id,\n          data\n        } = action.payload;\n        const newState = {\n          ...state,\n          productReviews: {\n            ...state.productReviews\n          },\n          allReviews: {\n            ...state.allReviews\n          }\n        };\n        const targetSpot = newState.productReviews[product_id];\n        console.log(\"the target spot is\");\n        if (targetSpot) {\n          targetSpot.reviews = [...targetSpot.reviews, data];\n          //   allReview = [...allReview]\n          //append the data to all reviews \n        }\n\n        return newState;\n      }\n    default:\n      return state;\n  }\n};\nexport default reviewsReducer;","map":{"version":3,"names":["session","CREATE_REVIEW","EDIT_REVIEW","GET_REVIEWS","create_review","product_id","data","type","payload","get_reviews","getAllReviewsThunk","dispatch","getState","res","fetch","method","ok","json","console","log","createReviewThunk","review","headers","body","JSON","stringify","initialState","allReviews","productReviews","reviewsReducer","state","action","newState","forEach","element","id","targetSpot","reviews"],"sources":["/Users/zenw/Capstone/Captone-Project/react-app/src/store/review.js"],"sourcesContent":["import session from './session'\nconst CREATE_REVIEW = 'create/review'\nconst EDIT_REVIEW = 'edit/review'\nconst GET_REVIEWS = 'get/reviews'\n// ACTIONS\nconst create_review = (product_id,data) =>{\n \n    return {\n        type:CREATE_REVIEW,\n        payload:{\n            product_id,\n            data\n        }\n    }\n}\n\nconst get_reviews = (data) =>{\n \n    return {\n        type:GET_REVIEWS,\n        payload:data\n        \n    }\n}\n\n\n\n\n\n\n\n\n\n//THUNKS\nexport const getAllReviewsThunk = ()=>async(dispatch,getState) =>{\n   \n    const res = await fetch('/api/review/get/reviews',{\n        method:\"GET\",\n    \n    })\n    if(res.ok){\n        const data = await res.json()\n        console.log(\"the data coming back is\",data)\n        dispatch(get_reviews(data))\n        return data\n    }\n\n\n}\n\nexport const createReviewThunk = (product_id,review)=>async(dispatch,getState) =>{\n\n \n    const res = await fetch('/api/review/new_review',{\n        method:\"POST\",\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(review),\n\n    })\n    if(res.ok){\n        const data = await res.json()\n        dispatch(create_review(product_id,data))\n        return data\n    }\n\n\n}\n\n\n//startiig\n\n\n\n//Reducers \n\nconst initialState = {allReviews:{}, productReviews:{}}\n\n\nexport const reviewsReducer=(state=initialState ,action)=>{\n   \n    switch(action.type){\n    case GET_REVIEWS:{\n        const newState = {...state , allReviews:{...state.allReviews}}\n        action.payload.forEach(element => {\n            newState.allReviews[element.id] = element\n        });\n        return newState\n    }\n    case CREATE_REVIEW: {\n        \n        const { product_id, data } = action.payload;\n\n        const newState = { ...state, productReviews:{...state.productReviews},allReviews:{...state.allReviews} };\n        const targetSpot = newState.productReviews[product_id];\n        console.log(\"the target spot is\")\n              if (targetSpot) {\n          targetSpot.reviews = [...targetSpot.reviews, data];\n        //   allReview = [...allReview]\n        //append the data to all reviews \n        }\n        return newState;\n     }\n\n\n\n\n        default:\n            return state\n    }\n}\n\nexport default reviewsReducer\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}