{"ast":null,"code":"//ACTION TYPES\nconst GET_PRODUCTS = 'get/products';\nconst DELETE_PRODUCT = 'delete/product';\nconst CREATE_PRODUCT = 'create/product';\nconst EDIT_PRODUCT = \"edit/product\";\nconst GET_PRODUCT_BY_ID = \"get/product/by/id\";\nconst GET_PRODUCT_OF_USER = \"user/products\";\nconst CREATE_REVIEW = 'create/review';\nconst EDIT_REVIEW = 'edit/review';\nconst DELETE_REVIEW = 'delete/review';\n//ACTIONS\nexport const get_user_products = (user_id, data) => {\n  return {\n    type: GET_PRODUCTS,\n    payload: {\n      user_id,\n      data\n    }\n  };\n};\nexport const get_products = data => {\n  return {\n    type: GET_PRODUCTS,\n    payload: data\n  };\n};\nexport const get_products_by_id = data => {\n  return {\n    type: GET_PRODUCT_BY_ID,\n    payload: data\n  };\n};\nexport const delete_product = data => {\n  return {\n    type: DELETE_PRODUCT,\n    payload: data\n  };\n};\nexport const create_product = data => {\n  return {\n    type: CREATE_PRODUCT,\n    payload: data\n  };\n};\nexport const edit_product = data => {\n  return {\n    type: EDIT_PRODUCT,\n    payload: data\n  };\n};\nconst create_review = (product_id, data) => {\n  return {\n    type: CREATE_REVIEW,\n    payload: {\n      product_id,\n      data\n    }\n  };\n};\nconst edit_review = (review_id, data) => {\n  return {\n    type: EDIT_REVIEW,\n    payload: {\n      review_id,\n      data\n    }\n  };\n};\nconst delete_review = (review_id, index) => {\n  return {\n    type: DELETE_REVIEW,\n    payload: {\n      review_id,\n      index\n    }\n  };\n};\n\n// THUNKS\nexport const createProductThunk = product => async (dispatch, getState) => {\n  const res = await fetch(\"/api/products/new_product\", {\n    method: \"POST\",\n    body: product\n  });\n  if (res.ok) {\n    const data = await res.json();\n    dispatch(create_product(data));\n    return data;\n  }\n};\nexport const getProductByIdThunk = product_id => async (dispatch, getState) => {\n  const res = await fetch(`/api/products/single_product/${product_id}`, {\n    method: \"GET\"\n  });\n  if (res.ok) {\n    const data = await res.json();\n    dispatch(get_products_by_id(data));\n    return data;\n  }\n};\nexport const deleteProductThunk = product_id => async (dispatch, getState) => {\n  const res = await fetch(`/api/products/delete/${product_id}`, {\n    method: \"DELETE\"\n  });\n  if (res.ok) {\n    const data = await res.json();\n    dispatch(delete_product(data));\n    return data;\n  }\n};\nexport const getAllProductThunk = () => async (dispatch, getState) => {\n  const res = await fetch('/api/products/', {\n    method: \"GET\"\n  });\n  if (res.ok) {\n    const data = await res.json();\n    dispatch(get_products(data));\n    return data;\n  } else {\n    const errorData = await res.json();\n    throw new Error(errorData.error || 'Failed to fetch data');\n  }\n};\nexport const editProductThunk = (product, product_id) => async (dispatch, getState) => {\n  // console.log(\"the product id is\", product_id)\n  const res = await fetch(`/api/products/update/${product_id}`, {\n    method: \"PUT\",\n    body: product\n  });\n  if (res.ok) {\n    const data = await res.json();\n    dispatch(edit_product(data));\n    return data;\n  } else {\n    const errorData = await res.json();\n    throw new Error(errorData.error || 'Failed to fetch data');\n  }\n};\nexport const createReviewThunk = (product_id, review) => async (dispatch, getState) => {\n  const res = await fetch('/api/review/new_review', {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(review)\n  });\n  if (res.ok) {\n    const data = await res.json();\n    dispatch(create_review(product_id, data));\n    return data;\n  }\n};\nexport const editReviewThunk = (review_id, review) => async (dispatch, getState) => {\n  const res = await fetch(`/api/review/update/${review_id}`, {\n    method: \"PUT\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(review)\n  });\n  if (res.ok) {\n    const data = await res.json();\n    dispatch(edit_review(review_id, data));\n    return data;\n  }\n};\nexport const deleteReviewThunk = (review_id, index) => async (dispatch, getState) => {\n  const res = await fetch(`/api/review/delete/${review_id}`, {\n    method: \"DELETE\"\n  });\n  if (res.ok) {\n    const data = await res.json();\n    dispatch(delete_review(review_id, index));\n    return data;\n  }\n};\n\n//REDUCDER\nconst inital_state = {\n  allProducts: {},\n  singleProduct: {}\n};\nconst productReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : inital_state;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_PRODUCTS:\n      {\n        const newState = {\n          ...state,\n          allProducts: {\n            ...state.allProducts\n          }\n        };\n        //make a copy of all the keys in the data not whats in them\n\n        action.payload.forEach(element => {\n          newState.allProducts[element.id] = element;\n        });\n        return newState;\n      }\n    case DELETE_PRODUCT:\n      {\n        const newState = {\n          ...state,\n          allProducts: {\n            ...state.allProducts\n          }\n        };\n        newState.allProducts = action.payload;\n        return newState;\n      }\n    case CREATE_PRODUCT:\n      {\n        const newState = {\n          ...state,\n          allProducts: {\n            ...state.allProducts\n          }\n        };\n        newState.allProducts[action.payload.id] = action.payload;\n        return newState;\n      }\n    case EDIT_PRODUCT:\n      {\n        const newState = {\n          ...state,\n          allProducts: {\n            ...state.allProducts\n          }\n        };\n        newState.allProducts[action.payload.id] = action.payload;\n        return newState;\n      }\n    case GET_PRODUCT_BY_ID:\n      {\n        const newState = {\n          ...state,\n          singleProduct: {\n            ...state.singleProduct\n          }\n        };\n        newState.singleProduct = action.payload;\n        return newState;\n      }\n    case CREATE_REVIEW:\n      {\n        const {\n          product_id,\n          data\n        } = action.payload;\n        const newState = {\n          ...state,\n          singleProduct: {\n            ...state.singleProduct\n          }\n        };\n        const targetSpot = newState.singleProduct;\n        if (targetSpot) {\n          targetSpot.reviews = [...targetSpot.reviews, data];\n        }\n        return newState;\n      }\n    case EDIT_REVIEW:\n      {\n        const {\n          review_id,\n          data\n        } = action.payload;\n\n        // Create a copy of the state\n        const newState = {\n          ...state,\n          singleProduct: {\n            ...state.singleProduct,\n            reviews: [...state.singleProduct.reviews]\n          }\n        };\n        const reviewIndex = newState.singleProduct.reviews.findIndex(review => review.id === review_id);\n        if (reviewIndex !== -1) {\n          const updatedReview = {\n            ...newState.singleProduct.reviews[reviewIndex],\n            ...data\n          };\n          newState.singleProduct.reviews = [...newState.singleProduct.reviews.slice(0, reviewIndex), updatedReview, ...newState.singleProduct.reviews.slice(reviewIndex + 1)];\n        }\n        return newState;\n      }\n    case DELETE_REVIEW:\n      {\n        const {\n          review_id,\n          index\n        } = action.payload;\n        const newState = {\n          ...state,\n          singleProduct: {\n            ...state.singleProduct\n          }\n        };\n        newState.singleProduct.reviews = [...newState.singleProduct.reviews.slice(0, index), ...newState.singleProduct.reviews.slice(index + 1)];\n        return newState;\n      }\n    default:\n      return state;\n  }\n};\nexport default productReducer;","map":{"version":3,"names":["GET_PRODUCTS","DELETE_PRODUCT","CREATE_PRODUCT","EDIT_PRODUCT","GET_PRODUCT_BY_ID","GET_PRODUCT_OF_USER","CREATE_REVIEW","EDIT_REVIEW","DELETE_REVIEW","get_user_products","user_id","data","type","payload","get_products","get_products_by_id","delete_product","create_product","edit_product","create_review","product_id","edit_review","review_id","delete_review","index","createProductThunk","product","dispatch","getState","res","fetch","method","body","ok","json","getProductByIdThunk","deleteProductThunk","getAllProductThunk","errorData","Error","error","editProductThunk","createReviewThunk","review","headers","JSON","stringify","editReviewThunk","deleteReviewThunk","inital_state","allProducts","singleProduct","productReducer","state","action","newState","forEach","element","id","targetSpot","reviews","reviewIndex","findIndex","updatedReview","slice"],"sources":["/Users/zenw/Capstone/Captone-Project/react-app/src/store/products.js"],"sourcesContent":["\n//ACTION TYPES\nconst GET_PRODUCTS = 'get/products'\nconst DELETE_PRODUCT='delete/product'\nconst CREATE_PRODUCT='create/product'\nconst EDIT_PRODUCT = \"edit/product\"\nconst GET_PRODUCT_BY_ID = \"get/product/by/id\"\nconst GET_PRODUCT_OF_USER = \"user/products\"\n\nconst CREATE_REVIEW = 'create/review'\nconst EDIT_REVIEW = 'edit/review'\nconst DELETE_REVIEW = 'delete/review'\n//ACTIONS\nexport const get_user_products = (user_id,data) =>{\n    return {\n        type:GET_PRODUCTS,\n        payload:{\n            user_id,\n            data\n\n        }\n    }\n}\n\nexport const get_products = (data) =>{\n    return {\n        type:GET_PRODUCTS,\n        payload:data\n    }\n}\n\nexport const get_products_by_id = (data) =>{\n    return {\n        type:GET_PRODUCT_BY_ID,\n        payload:data\n    }\n}\n\nexport const delete_product = (data)=>{\n    return {\n        type:DELETE_PRODUCT,\n        payload:data\n    }\n}\n\nexport const create_product = (data)=>{\n    return {\n        type:CREATE_PRODUCT,\n        payload:data\n    }\n}\n\nexport const edit_product = (data)=>{\n    return {\n        type:EDIT_PRODUCT,\n        payload:data\n    }\n}\nconst create_review = (product_id,data) =>{\n \n    return {\n        type:CREATE_REVIEW,\n        payload:{\n            product_id,\n            data\n        }\n    }\n}\n\n\nconst edit_review = (review_id,data)=>{\n\n    return {\n        type:EDIT_REVIEW,\n        payload:{\n            review_id,\n            data\n        }\n    }\n}\n\nconst delete_review = (review_id,index) =>{\n    return {\n        type:DELETE_REVIEW ,\n        payload:{\n            review_id,\n            index\n\n        }\n    }\n}\n\n\n\n\n\n\n\n\n\n// THUNKS\nexport const createProductThunk = (product) => async(dispatch,getState) =>{\n \n \n    const res = await fetch(\"/api/products/new_product\",{\n        method:\"POST\",\n        body:product\n    })\n    if(res.ok){\n        const data = await res.json()\n        dispatch(create_product(data))\n        return data\n    }\n}\n\n\nexport const getProductByIdThunk = (product_id) => async (dispatch, getState) => {\n    \n    const res = await fetch(`/api/products/single_product/${product_id}`,{\n       method: \"GET\"\n   });\n   if (res.ok) {\n       const data = await res.json();\n       dispatch(get_products_by_id(data));\n       return data;\n   } \n}\n\n\nexport const deleteProductThunk = (product_id) => async(dispatch,getState) =>{\n    const res = await fetch(`/api/products/delete/${product_id}`,{\n        method:\"DELETE\"\n    })\n    if(res.ok){\n        const data = await res.json()\n        dispatch(delete_product(data))\n        return data\n    }\n}\n\n\nexport const getAllProductThunk = () => async (dispatch, getState) => {\n         const res = await fetch('/api/products/',{\n            method: \"GET\"\n        });\n        if (res.ok) {\n            const data = await res.json();\n            dispatch(get_products(data));\n            return data;\n        } else {\n          \n            const errorData = await res.json();\n            throw new Error(errorData.error || 'Failed to fetch data');\n        }  \n}\n\nexport const editProductThunk = (product,product_id) => async (dispatch, getState) => {\n  \n\n    // console.log(\"the product id is\", product_id)\n    const res = await fetch(`/api/products/update/${product_id}`,{\n        method:\"PUT\",\n        body:product\n    })\n\n   if (res.ok) {\n       const data = await res.json();\n       dispatch(edit_product(data));\n       return data;\n   } else {\n     \n       const errorData = await res.json();\n       throw new Error(errorData.error || 'Failed to fetch data');\n   }  \n}\n\n\nexport const createReviewThunk = (product_id,review)=>async(dispatch,getState) =>{\n\n \n    const res = await fetch('/api/review/new_review',{\n        method:\"POST\",\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(review),\n\n    })\n    if(res.ok){\n        const data = await res.json()\n        dispatch(create_review(product_id,data))\n        return data\n    }\n\n\n}\n\nexport const editReviewThunk = (review_id,review)=>async(dispatch,getState) =>{\n\n \n    const res = await fetch(`/api/review/update/${review_id}`,{\n        method:\"PUT\",\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(review),\n\n    })\n    if(res.ok){\n        const data = await res.json()\n        dispatch(edit_review(review_id,data))\n        return data\n    }\n\n\n}\nexport const deleteReviewThunk = (review_id,index)=>async(dispatch,getState) =>{\n\n \n    const res = await fetch(`/api/review/delete/${review_id}`,{\n        method:\"DELETE\",\n     \n      \n\n    })\n    if(res.ok){\n        const data = await res.json()\n      \n        dispatch(delete_review(review_id,index))\n        return data\n    }\n\n\n}\n\n//REDUCDER\nconst inital_state = {allProducts:{}, singleProduct:{}}\n\nconst productReducer = (state=inital_state, action)=>{\n   \n    switch(action.type) {\n        case GET_PRODUCTS:{\n          \n\n            const newState = {...state, allProducts:{...state.allProducts}}\n            //make a copy of all the keys in the data not whats in them\n\n            action.payload.forEach((element)=>{\n                newState.allProducts[element.id]=element\n            })\n            return newState\n        }\n        case DELETE_PRODUCT:{\n            const newState = {...state,allProducts:{...state.allProducts}}\n            newState.allProducts = action.payload\n            return newState\n        }\n        case CREATE_PRODUCT:{\n            const newState = {...state , allProducts:{...state.allProducts}}\n            newState.allProducts[action.payload.id] = action.payload\n            \n            return newState\n        }\n        case EDIT_PRODUCT:{\n           \n            const newState = {...state,allProducts:{...state.allProducts}}\n            newState.allProducts[action.payload.id] = action.payload\n            return newState\n        }\n        case GET_PRODUCT_BY_ID:{\n            const newState  = {...state, singleProduct:{...state.singleProduct}}\n            newState.singleProduct = action.payload\n            \n            return newState\n        }\n        case CREATE_REVIEW: {\n        \n            const { product_id, data } = action.payload;\n    \n            const newState = { ...state,singleProduct:{...state.singleProduct}}\n\n            const targetSpot = newState.singleProduct;\n        \n                  if (targetSpot) {\n              targetSpot.reviews = [...targetSpot.reviews, data];\n            \n            }\n            return newState;\n         }\n\n         case EDIT_REVIEW: {\n            const { review_id, data } = action.payload;\n          \n            // Create a copy of the state\n            const newState = {\n              ...state,\n              singleProduct: {\n                ...state.singleProduct,\n                reviews: [...state.singleProduct.reviews], \n              },\n            };\n          \n       \n            const reviewIndex = newState.singleProduct.reviews.findIndex(\n              (review) => review.id === review_id\n            );\n          \n     \n            if (reviewIndex !== -1) {\n           \n              const updatedReview = {\n                ...newState.singleProduct.reviews[reviewIndex],\n                ...data,\n              };\n          \n          \n              newState.singleProduct.reviews = [\n                ...newState.singleProduct.reviews.slice(0, reviewIndex),\n                updatedReview,\n                ...newState.singleProduct.reviews.slice(reviewIndex + 1),\n              ];\n            }\n          \n            return newState;\n          }\n          case DELETE_REVIEW: {\n            const { review_id,index } = action.payload;\n            const newState = { ...state, singleProduct: { ...state.singleProduct } };\n            newState.singleProduct.reviews = [\n                ...newState.singleProduct.reviews.slice(0, index),\n                ...newState.singleProduct.reviews.slice(index + 1),\n              ];\n          \n            return newState;\n          }\n\n          \n          \n          \n          \n          \n          \n        default:\n            return state\n\n    }\n}\n\n\nexport default productReducer"],"mappings":"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"},"metadata":{},"sourceType":"module"}